---
- name: Requirements validation for the mirror catalog role
  assert:
    that:
      - mc_registry | default("") | length
      - mc_oc_tool_path is defined
      - mc_catalog is defined
      - mc_catalog | length

- name: Get catalog Digest
  shell:
    cmd: >
      skopeo inspect
      {% if mc_pullsecret is defined %}
      --authfile {{ mc_pullsecret }}
      {% endif %}
      docker://{{ mc_catalog }} |
      jq -r '.Digest'
  register: image_digest
  retries: 5
  delay: 5
  until:
    - image_digest.stdout | regex_search('^sha')

- name: Create tmp directory
  tempfile:
    state: directory
  register: mc_tmp

- name: Mirror catalog manifests
  vars:
    mc_base_catalog: "{{ mc_catalog | regex_search('(^.+):', '\\1') | first }}"
  shell:
    cmd: >
      set -x;
      {{ mc_oc_tool_path }} adm catalog mirror
      {{ mc_base_catalog }}@{{ image_digest.stdout }}
      {{ mc_registry }}
      --index-filter-by-os="linux/amd64"
      --insecure
      --max-components=3
      --path=/configs/:{{ mc_tmp.path }}
      {% if mc_pullsecret is defined %}
      --registry-config {{ mc_pullsecret }}
      {% endif %}
      --to-manifests={{ mc_tmp.path }}/manifests
  register: catalog_manifests_output

- name: Set the icsp file
  tempfile:
    state: file
    prefix: "icsp_{{ (mc_catalog | basename).split(':')[0] }}."
  register: mc_icsp_file

- name: Copy the generated icsp file
  copy:
    src: "{{ mc_tmp.path }}/manifests/imageContentSourcePolicy.yaml"
    dest: "{{ mc_icsp_file.path }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: "0644"
  notify:
    - "Delete tmp directory"
