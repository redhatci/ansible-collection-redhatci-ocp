---
- name: Validate cert_settings required to update the project
  assert:
    that: "{{ item }} is defined"
    fail_msg: "The parameter {{ item }} is required to update cert project"
    success_msg: "All required parameters are ok, proceeding to update certification project"
  with_items:
    - operator.short_description
    - cert_settings.auto_publish
    - cert_settings.email_address
    - cert_settings.build_categories
    - cert_settings.registry_override_instruct
    - cert_settings.application_categories
    - cert_settings.os_content_type
    - cert_settings.privileged
    - cert_settings.organization_id
    - cert_settings.release_category
    - cert_settings.repository_description

- name: Set and save project IDs to use with Product-Listing PATCH and Attachment
  set_fact:
    cert_projects: "{{ cert_projects | default([]) + [ cert_project_id ] }}"

- name: Print JSON draft for the project to be updated
  vars:
    template_filename: "templates/update_project_{{ project_type }}_setting.json.j2"
  debug:
    msg: "{{ lookup('template', template_filename) }}"

- name: Update certification project Settings
  vars:
    pyxis_apikey: "{{ lookup('file', pyxis_apikey_path) }}"
    template_filename: "templates/update_project_{{ project_type }}_setting.json.j2"
  uri:
    url: "{{ create_project_url }}/id/{{ cert_project_id }}"
    method: PATCH
    headers:
      X-API-KEY: "{{ pyxis_apikey }}"
    body_format: json
    body: "{{ lookup('template', template_filename) }}"
    status_code: 200
    timeout: 120
  register: update_cert_project_output
...
