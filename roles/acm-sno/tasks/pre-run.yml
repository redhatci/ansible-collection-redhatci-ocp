---

- name: "Fail when acm_user_registry is not defined"
  fail:
    msg:
      - "acm_user_registry variable is required for disconnected environments
         Please review the example of the acm_user_registry variable in the role documentation"
  when:
    - acm_user_registry is undefined
    - acm_disconnected | bool

- name: "Check if the ACM CRD is present"
  community.kubernetes.k8s_info:
    kind: CustomResourceDefinition
    name: multiclusterengines.multicluster.openshift.io
  register: acm_crd

- name: "Fail if ACM CRD is not present"
  fail:
    msg: "CRDs are not present"
  when: acm_crd.resources | list | count == 0

- name: "Get Storage Classes"
  community.kubernetes.k8s_info:
    api_version: v1
    kind: StorageClass
  register: storage_class

- name: "Fail when there is no storage class available"
  fail:
    msg: "Defined storage class do not exists"
  when:
    - storage_class.resources | length == 0

- name: "Fail when defined storage class do not exists"
  vars:
    query_sc_name: 'resources[*].metadata.name'
    query_results: "{{ storage_class | json_query(query_sc_name) }}"
  fail:
    msg: "Defined storage class do not exists"
  when:
    - acm_sc is defined
    - acm_sc not in query_results

- name: "Fail when no default storage class"
  vars:
    query_default_sc: 'resources[*].metadata.annotations."storageclass.kubernetes.io/is-default-class"'
    query_results: "{{ storage_class | json_query(query_default_sc) }}"
  fail:
    msg: "No default storage class was found"
  when:
    - storage_class is defined
    - "not('true' in query_results)"
    - acm_sc is not defined

- name: "Disable provisioning"
  block:
    - name: "Get provisioning configuration"
      community.kubernetes.k8s_info:
        api_version: metal3.io/v1alpha1
        kind: Provisioning
        name: provisioning-configuration
      register: provisioning_cr

    - name: "Allow to expose virtual media via external network"
      community.kubernetes.k8s:
        definition:
          apiVersion: metal3.io/v1alpha1
          kind: Provisioning
          metadata:
            name: provisioning-configuration
          spec:
            virtualMediaViaExternalNetwork: true
      when:
        - provisioning_cr.resources | length
  when:
    - acm_vm_external_network | bool
...
