---

# Create site and policies in ArgoCD

- name: Assert the required variables are defined
  ansible.builtin.assert:
    that:
      - czga_sites_gitops_repo is defined
      - czga_sites_gitops_repo | length > 0
      - czga_sites_branch is defined
      - czga_sites_branch | length > 0
      - czga_sites_path is defined
      - czga_sites_path | length > 0
      - czga_policies_gitops_repo is defined
      - czga_policies_gitops_repo | length > 0
      - czga_policies_branch is defined
      - czga_policies_branch | length > 0
      - czga_policies_path is defined
      - czga_policies_path | length > 0
      - czga_site_generator_version is defined
      - czga_site_generator_version | length > 0
      - czga_multicluster_version is defined
      - czga_multicluster_version | length > 0
      - czga_ocp_pull_secret is defined
      - czga_ocp_pull_secret | length > 0

- name: Run all comands in the podman runner
  delegate_to: "{{ czga_podman_runner_host }}"
  block:

    - name: Set a cluster name list if not defined
      ansible.builtin.set_fact:
        czga_clusters_list: ["{{ czga_clusters_namespace }}"]
      when:
        - czga_clusters_list is not defined

    - name: Create temporary directory for cloning the repo
      ansible.builtin.tempfile:
        state: directory
      register: temp_dir

    - name: Copy kubeconfig to remote system
      ansible.builtin.copy:
        src: "{{ czga_kubeconfig_path }}"
        dest: "{{ temp_dir.path }}/kubeconfig"
        mode: "0644"

    - name: Create a ZTP directory
      ansible.builtin.file:
        path: "{{ temp_dir.path }}/ztp"
        state: directory
        mode: '0775'

    - name: "Create a pull-secret file for podman"
      ansible.builtin.copy:
        content: "{{ czga_ocp_pull_secret }}"
        dest: "{{ temp_dir.path }}/temp-pull-secret.json"
        mode: "0644"

    # Please see:
    # https://docs.redhat.com/en/documentation/openshift_container_platform/4.17/html/edge_computing/ztp-manual-install#ztp-generating-install-and-config-crs-manually_ztp-manual-install
    - name: Download ZTP cluster and policies applications from ztp site generator
      ansible.builtin.shell: |
        set -o pipefail
        podman run --authfile "{{ temp_dir.path }}"/temp-pull-secret.json --rm --log-driver=none "{{ czga_site_generator_image }}:{{ czga_site_generator_version }}" extract /home/ztp --tar | tar x -C "{{ temp_dir.path }}"/ztp/

    - name: Set the proper permissions
      ansible.builtin.shell: |
        sudo chown "{{ ansible_user }}":"{{ ansible_user }}" -R "{{ temp_dir.path }}"/ztp/

    ## Configure clusters
    - name: Replace namespace in clusters-app.yaml
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/clusters-app.yaml"
        regexp: "clusters-sub"
        replace: "{{ (czga_clusters_list | length == 1) | ternary(czga_clusters_list[0], '') }}"
        after: "kind: Application"

    - name: Replace path in clusters-app.yaml
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/clusters-app.yaml"
        regexp: "path.*"
        replace: "path: {{ czga_sites_path }}"

    - name: Replace repoURL in clusters-app.yaml
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/clusters-app.yaml"
        regexp: "repoURL.*"
        replace: "repoURL: {{ czga_sites_gitops_repo }}"

    - name: Replace targetRevision in clusters-app.yaml
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/clusters-app.yaml"
        regexp: "targetRevision.*"
        replace: "targetRevision: {{ czga_sites_branch }}"

    - name: Allow empty in the clusters-app.yaml
      ansible.builtin.lineinfile:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/clusters-app.yaml"
        line: "      allowEmpty: true"
        insertafter: selfHeal.*

    ## Configure policies
    - name: Replace namespace in policies-app.yaml
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/policies-app.yaml"
        regexp: "policies-sub"
        replace: "{{ czga_policies_namespace }}"

    - name: Add namespace to the policies-app-project.yaml
      ansible.builtin.blockinfile:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/policies-app-project.yaml"
        block: |
          {% filter indent(width=2, first=true) %}
          - namespace: '{{ czga_policies_namespace }}'
            server: '*'
          {% endfilter %}
        insertafter: destinations.*
        marker: ""

    - name: Replace path in policies-app.yaml
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/policies-app.yaml"
        regexp: "path.*"
        replace: "path: {{ czga_policies_path }}"

    - name: Replace repoURL in policies-app.yaml
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/policies-app.yaml"
        regexp: "repoURL.*"
        replace: "repoURL: {{ czga_policies_gitops_repo }}"

    - name: Replace targetRevision in policies-app.yaml
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/policies-app.yaml"
        regexp: "targetRevision.*"
        replace: "targetRevision: {{ czga_policies_branch }}"

    - name: Allow empty in the policies-app.yaml
      ansible.builtin.lineinfile:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/policies-app.yaml"
        line: "      allowEmpty: true"
        insertafter: selfHeal.*

    ## Add adaptation due to https://issues.redhat.com/browse/CNF-7840
    ## based on https://redhat-internal.slack.com/archives/C02EG99MR9C/p1679006883470389?thread_ts=1678887461.410819&cid=C02EG99MR9C
    ## Not required from 4.16 in advance
    - name: Add ClusterImageSet to projects
      when: czga_site_generator_version is version ("v4.15", "<=")
      block:
        - name: Add ClusterImageSet to the app-project.yaml
          ansible.builtin.lineinfile:
            path: "{{ temp_dir.path }}/ztp/argocd/deployment/app-project.yaml"
            line: "{{ item }}"
            insertafter: clusterResourceWhitelist.*
          loop:
            - "    kind: ClusterImageSet"
            - "  - group: hive.openshift.io"

        - name: Add ClusterImageSet to the policies-app-project.yaml
          ansible.builtin.lineinfile:
            path: "{{ temp_dir.path }}/ztp/argocd/deployment/policies-app-project.yaml"
            line: "{{ item }}"
            insertafter: clusterResourceWhitelist.*
          loop:
            - "    kind: ClusterImageSet"
            - "  - group: hive.openshift.io"

    - name: Add ClusterInstance to app-project.yaml
      ansible.builtin.blockinfile:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/app-project.yaml"
        block: |
          {% filter indent(width=2, first=true) %}
          - group: siteconfig.open-cluster-management.io
            kind: ClusterInstance
          {% endfilter %}
        insertafter: namespaceResourceWhitelist.*

    - name: Replace ztp-site-generate image container URL in argocd-openshift-gitops-patch.json
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/argocd-openshift-gitops-patch.json"
        regexp: '[^"]*ztp-site-generat[^"]*'
        replace: "{{ czga_site_generator_image }}:{{ czga_site_generator_version }}"

    - name: Replace multicluster-operators-subscription image container URL in argocd-openshift-gitops-patch.json
      ansible.builtin.replace:
        path: "{{ temp_dir.path }}/ztp/argocd/deployment/argocd-openshift-gitops-patch.json"
        regexp: '[^"]*multicluster-operators-subscription[^"]*'
        replace: "{{ czga_multicluster_image }}:{{ czga_multicluster_version }}"

    - name: Patch the ArgoCD instance to install the GitOps ZTP plugin
      ansible.builtin.shell: |
        {{ czga_oc_tool_path }} --kubeconfig="{{ temp_dir.path }}/kubeconfig" patch argocd openshift-gitops -n openshift-gitops --patch-file "{{ temp_dir.path }}/ztp/argocd/deployment/argocd-openshift-gitops-patch.json" --type=merge

    - name: Disable proxy addon
      kubernetes.core.k8s:
        api_version: multicluster.openshift.io/v1
        kubeconfig: "{{ temp_dir.path }}/kubeconfig"
        kind: MultiClusterEngine
        name: multiclusterengine
        merge_type:
          - merge
        definition: "{{ lookup('file', temp_dir.path + '/ztp/argocd/deployment/disable-cluster-proxy-addon.json') | from_json }}"

    # Before launching the SiteConfig, provide the OCP pull secret extracted from the hub cluster
    # For this, we need to create the cluster namespace in advance
    - name: Create the Spoke cluster namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ item }}"
      loop: "{{ czga_clusters_list }}"

    - name: Save pull-secret in a variable
      ansible.builtin.slurp:
        src: "{{ temp_dir.path }}/temp-pull-secret.json"
      register: _czga_encoded_pull_secret
      no_log: true

    - name: Create the Spoke cluster pull-secret
      block:
        - name: Create the Spoke cluster pull-secret
          kubernetes.core.k8s:
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: assisted-deployment-pull-secret
                namespace: "{{ item }}"
              type: kubernetes.io/dockerconfigjson
              data:
                .dockerconfigjson: "{{ _czga_encoded_pull_secret['content'] }}"
          no_log: true
          loop: "{{ czga_clusters_list }}"
      rescue:
        - name: Check the Spoke cluster pull-secret exists
          kubernetes.core.k8s_info:
            api_version: v1
            kind: Secret
            name: assisted-deployment-pull-secret
            namespace: "{{ item }}"
          no_log: true
          loop: "{{ czga_clusters_list }}"
          register: _czga_pull_secret_info

        - name: Assert the Spoke cluster pull-secret exists
          ansible.builtin.assert:
            that:
              - item.resources is defined
              - item.resources | length > 0
            fail_msg: "Spoke cluster pull-secret is missing"
          loop: "{{ _czga_pull_secret_info.results }}"

    - name: Wait for the GitOps ZTP plugin activation
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: openshift-gitops
        label_selectors:
          - app.kubernetes.io/name = openshift-gitops-repo-server
      register: _czga_repo_server_pod
      retries: 39
      delay: 14
      until:
        - _czga_repo_server_pod.resources is defined
        - _czga_repo_server_pod.resources | length == 1
        - _czga_repo_server_pod.resources[0] | community.general.json_query("status.conditions[?type=='Ready'].status") == ["True"]
        - '"kustomize" in _czga_repo_server_pod.resources[0] | community.general.json_query("spec.volumes[].name")'

    - name: Run the policies and cluster apps
      ansible.builtin.shell: |
        {{ czga_oc_tool_path }} --kubeconfig="{{ temp_dir.path }}/kubeconfig" apply -k "{{ temp_dir.path }}/ztp/argocd/deployment"

    - name: Remove the temporary directories
      ansible.builtin.file:
        path: "{{ temp_dir.path }}"
        state: absent
      when: temp_dir.path is defined
