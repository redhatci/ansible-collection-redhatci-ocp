---
- name: "Ensure tmp directory existes"
  ansible.builtin.file:
    state: directory
    path: "{{ ansible_env.TMPDIR }}"
    mode: "0755"
  when: ansible_env.TMPDIR is defined

- name: Check if multibench host has the crucible binaries
  ansible.builtin.shell: >
    crucible help
  delegate_to: "{{ multibench_host }}"
  register: _multibench_run_binaries
  ignore_errors: true
  become: true

- name: Fail if the host is not setup properly
  ansible.builtin.fail:
    msg: "Host does not have crucible installed. Please run playbooks/multibench_setup_host.yml before using this role."
  when: _multibench_run_binaries.rc != 0

- name: Generate config file for multibench
  ansible.builtin.template:
    src: templates/config.ini.j2
    dest: "{{ multibench_script_dir }}/config.ini"
    mode: '0644'
  delegate_to: "{{ multibench_host }}"
  become: true

- name: Creating an output directory if needed
  when:
    - multibench_run_output_dir is undefined
    - multibench_run_output_dir.path is undefined
  block:
    - name: Create working directory
      ansible.builtin.tempfile:
        state: directory
        prefix: multibench
      register: _multibench_run_output

    - name: Set the new directory as multibench_run_output_dir
      ansible.builtin.set_fact:
        multibench_run_output_dir: _multibench_run_output

# Multibench needs to be run as root to properly access all settings files needed.
# The script launch a crucible cmd which start to build the container images used for the tests.
# Then, the infrastructure is deployed in a dedicated namespace called crucible-rickshaw.
# Once the tests are finished, the results are published in an OpenSearch DB and a summary is generated.
- name: Run and manage multibench workload
  block:
    - name: First try on launching multibench workload
      ansible.builtin.shell:
        cmd: >
          ./{{ multibench_script }} config.ini
        chdir: "{{ multibench_script_dir }}"
      delegate_to: "{{ multibench_host }}"
      become: true
      register: _multibench_run_results

  rescue:
    - name: Delete the output directory
      ansible.builtin.file:
        path: "{{ multibench_run_output_dir.path | default('/tmp/multibench') }}"
        state: absent

    - name: "Create a new temporary directory"
      ansible.builtin.tempfile:
        state: directory
        prefix: multibench
      register: _multibench_run_output

    - name: Set the new directory as multibench_run_output_dir
      ansible.builtin.set_fact:
        multibench_run_output_dir: _multibench_run_output

    - name: Delete the crucible-rickshaw namespace and its resources
      community.kubernetes.k8s:
        state: absent
        api: v1
        kind: Namespace
        name: crucible-rickshaw

    - name: Wait for namespace to be deleted
      community.kubernetes.k8s_info:
        api: v1
        kind: Namespace
        name: crucible-rickshaw
      register: _multibench_run_namespace_info
      until: _multibench_run_namespace_info.resources | length == 0
      retries: 20
      delay: 5

    - name: "Retry launching the multibench workload"
      ansible.builtin.shell:
        cmd: >
          ./{{ multibench_script }} config.ini
        chdir: "{{ multibench_script_dir }}"
      delegate_to: "{{ multibench_host }}"
      become: true
      register: _multibench_run_results

- name: Extract multibench result summary from output
  ansible.builtin.set_fact:
    multibench_run_regex_file: >-
      {{ _multibench_run_results.stdout | regex_search('iperf-and-uperf--(.+?)run/result-summary') }}

- name: Build filepath
  ansible.builtin.set_fact:
    multibench_run_filepath: "/var/lib/crucible/run/{{ multibench_run_regex_file }}.txt"

- name: Retrieve summary results from Multibench VM
  ansible.builtin.fetch:
    src: "{{ multibench_run_filepath }}"
    dest: "{{ multibench_run_output_dir.path }}/result-summary.txt"
    flat: true
  delegate_to: "{{ multibench_host }}"
  become: true
...
