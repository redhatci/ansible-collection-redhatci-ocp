---
- name: Task to trigger CI job
  ansible.builtin.debug:
    msg: ":)"

# cert_item is a complex nested variable,
# it could be container, operator, cnf, or helmchart
- name: Validate cert_item to be defined
  ansible.builtin.assert:
    that: "{{ cert_item }} is defined"
    fail_msg: "The parameter cert_item is required to create cert project"
    success_msg: "The parameter {{ cert_item }} is present"

- name: Handle the situation when cert project already exists
  ansible.builtin.include_tasks: check_if_project_exists.yml
  when:
    - product_type in ['container', 'helmchart', 'cnf']
    - check_for_existing_projects | bool

- name: Get GitHub username from provided token
  ansible.builtin.include_tasks: get-gh-username.yml
  when: product_type == 'operator'

- name: Create cert project
  ansible.builtin.include_tasks: create_project.yml

- name: Update the project with company info when cert_settings is defined
  ansible.builtin.include_tasks: update_project.yml
  when:
    - cert_settings is defined
    # The only update for cnf project is to add email
    # and it's done during the project creation
    - product_type != 'cnf'
    - cert_project_id | default('') | length

- name: Attach all product listings
  ansible.builtin.include_tasks: attach_product_listings.yml
  when:
    - cert_item.pyxis_product_lists is defined
    - cert_item.pyxis_product_lists | length > 0
    - cert_project_id | default('') | length
...
