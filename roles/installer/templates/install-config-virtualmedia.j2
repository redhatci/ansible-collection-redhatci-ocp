apiVersion: v1
baseDomain: {{ domain }}
{%if (http_proxy|length or https_proxy|length) %}
proxy:
  httpProxy: {{ http_proxy }}
  httpsProxy: {{ https_proxy }}
  noProxy: {{ (no_proxy_list|length) | ternary(no_proxy_list + ',' + provisioning_subnet, provisioning_subnet) }}
{% endif %}
metadata:
  name: {{ cluster }}
networking:
  networkType: {{ network_type }}
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 12)) %}
  machineNetwork:
{% if dualstack_baremetal|bool or ipv4_baremetal|bool or not ipv6_enabled|bool %}
  - cidr: {{ extcidrnet }}
{% endif %}
{% if dualstack_baremetal|bool or ipv6_enabled|bool %}
  - cidr: {{ extcidrnet6 }}
{% endif %}
{% else %}
  machineCIDR: {{ extcidrnet }}
{% endif %}
  clusterNetwork:
{% if dualstack_baremetal|bool or ipv4_baremetal|bool or not ipv6_enabled|bool %}
  - cidr: 10.128.0.0/14
    hostPrefix: 23
{% endif %}
{% if dualstack_baremetal|bool or ipv6_enabled|bool %}
  - cidr: fd02::/48
    hostPrefix: 64
{% endif %}
  serviceNetwork:
{% if dualstack_baremetal|bool or ipv4_baremetal|bool or not ipv6_enabled|bool %}
  - 172.30.0.0/16
{% endif %}
{% if dualstack_baremetal|bool or ipv6_enabled|bool %}
  - fd03::/112
{% endif %}
{% if fips_enabled is defined and fips_enabled|bool %}
fips: true
{% endif %}
compute:
- name: worker
  replicas: {{ numworkers }}
controlPlane:
  name: master
  replicas: {{ nummasters }}
  platform:
    baremetal: {}
platform:
  baremetal:
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 12)) %}
    apiVIPs:
{% if (dualstack_baremetal|bool or ipv4_baremetal|bool or not ipv6_enabled|bool) and apivip is defined and apivip|ipv4 %}
      - {{ apivip }}
{% endif %}
{% if (dualstack_baremetal|bool or ipv6_enabled|bool) and apivip6 is defined and apivip6|ipv6 %}
      - {{ apivip6 }}
{% endif %}
    ingressVIPs:
{% if (dualstack_baremetal|bool or ipv4_baremetal|bool or not ipv6_enabled|bool) and ingressvip is defined and ingressvip|ipv4 %}
      - {{ ingressvip }}
{% endif %}
{% if (dualstack_baremetal|bool or ipv6_enabled|bool) and ingressvip6 is defined and ingressvip6|ipv6 %}
      - {{ ingressvip6 }}
{% endif %}
{% else %}
    apiVIP: {{ (apivip is defined and apivip|ipv4) | ternary(apivip, apivip6) }}
    ingressVIP: {{ (ingressvip is defined and ingressvip|ipv4) | ternary(ingressvip, ingressvip6) }}
{% endif %}
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int < 5)) %}
    dnsVIP: {{ dnsvip }}
{% endif %}
{% if baremetal_bridge != 'baremetal' %}
    externalBridge: {{ baremetal_bridge }}
{% endif %}
    provisioningNetwork: "Disabled"
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int == 6)) %}
    provisioningHostIP: {{ provisioningHostIP }}
    bootstrapProvisioningIP: {{ bootstrapProvisioningIP }}
{% endif %}
{% if (((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 12)) and (static_bootstrap_extnet | default(false) | bool)) %}
{% if bootstrapExternalStaticIP is defined %}
    bootstrapExternalStaticIP: {{ bootstrapExternalStaticIP }}
{% endif %}
{% if bootstrapExternalStaticGateway is defined %}
    bootstrapExternalStaticGateway: {{ bootstrapExternalStaticGateway }}
{% endif %}
{% endif %}
{% if (((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 14)) and (static_bootstrap_extnet | default(false) | bool)) %}
{% if bootstrapExternalStaticDNS is defined %}
    bootstrapExternalStaticDNS: {{ bootstrapExternalStaticDNS }}
{% endif %}
{% endif %}
{% if externalMACAddress is defined %}
    externalMACAddress: {{ externalMACAddress }}
{% endif %}
{% if bootstraposimage is defined and bootstraposimage|length %}
    bootstrapOSImage: {{ bootstraposimage }}
{% endif %}
{% if clusterosimage is defined and clusterosimage|length %}
    clusterOSImage: {{ clusterosimage }}
{% endif %}
    hosts:
{% for host in groups['masters'] %}
      - name: {{ hostvars[host]['inventory_hostname'] }}
        role: {{ hostvars[host]['role'] }}
        bmc:
{% if groups['dell_hosts_redfish'] is defined and host in groups['dell_hosts_redfish'] and ((release_version.split('.')[0]|int > 4) or ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 6))) and enable_virtualmedia|bool %}
          address: idrac-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}/redfish/v1/Systems/System.Embedded.1
          disableCertificateVerification: {{ disable_bmc_certificate_verification }}
{% elif groups['hp_hosts_redfish'] is defined and host in groups['hp_hosts_redfish'] and ((release_version.split('.')[0]|int > 4) or ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 6))) and enable_virtualmedia|bool %}
          address: redfish-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}/redfish/v1/Systems/1
          disableCertificateVerification: {{ disable_bmc_certificate_verification }}
{% elif groups['kvm_hosts_redfish'] is defined and host in groups['kvm_hosts_redfish'] %}
          address: redfish-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}:{{ hostvars[host]['redfish_port'] }}/redfish/v1/Systems/{{ hostvars[host]['kvm_uuid'] }}
          disableCertificateVerification: true
{% elif ansible_system_vendor == 'Dell Inc.' %}
          address: idrac-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}/redfish/v1/Systems/System.Embedded.1
          disableCertificateVerification: {{ disable_bmc_certificate_verification }}
{% else %}
          address: redfish-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}:{{ hostvars[host]['ipmi_port']|default(623) }}
          disableCertificateVerification: {{ disable_bmc_certificate_verification }}
{% endif %}
          username: {{ hostvars[host]['ipmi_user'] }}
          password: {{ hostvars[host]['ipmi_password'] }}
        bootMACAddress: {{ hostvars[host]['provision_mac'] }}
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int < 6)) %}
{% if 'hardware_profile' in hostvars[host] %}
        hardwareProfile: {{ hostvars[host]['hardware_profile'] }}
{% else %}
        hardwareProfile: default
{% endif %}
{% endif %}
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 6)) %}
{% if bootmode is defined and bootmode == 'legacy' %}
        bootMode: legacy
{% endif %}
{% if 'root_device_hint' in hostvars[host] and 'root_device_hint_value' in hostvars[host] and hostvars[host]['root_device_hint'] in roothint_list %}
        rootDeviceHints:
          {{ hostvars[host]['root_device_hint'] }}: '{{ hostvars[host]['root_device_hint_value'] }}'
{% endif %}
{% endif %}
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 10)) %}
{% if master_network_config_template is defined %}
        networkConfig:
{{ lookup('template', master_network_config_template, template_vars=hostvars[host]) | indent(10, true) }}
{% endif %}
{% endif %}
{% endfor %}
{% if groups['workers'] is defined %}
{% for host in groups['workers'] %}
      - name: {{ hostvars[host]['inventory_hostname'] }}
        role: {{ hostvars[host]['role'] }}
        bmc:
{% if groups['dell_hosts_redfish'] is defined and host in groups['dell_hosts_redfish'] and ((release_version.split('.')[0]|int > 4) or ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 6))) and enable_virtualmedia|bool %}
          address: idrac-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}/redfish/v1/Systems/System.Embedded.1
          disableCertificateVerification: {{ disable_bmc_certificate_verification }}
{% elif groups['hp_hosts_redfish'] is defined and host in groups['hp_hosts_redfish'] and ((release_version.split('.')[0]|int > 4) or ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 6))) and enable_virtualmedia|bool %}
          address: redfish-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}/redfish/v1/Systems/1
          disableCertificateVerification: {{ disable_bmc_certificate_verification }}
{% elif groups['kvm_hosts_redfish'] is defined and host in groups['kvm_hosts_redfish'] %}
          address: redfish-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}:{{ hostvars[host]['redfish_port'] }}/redfish/v1/Systems/{{ hostvars[host]['kvm_uuid'] }}
          disableCertificateVerification: true
{% elif ansible_system_vendor == 'Dell Inc.' %}
          address: idrac-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}/redfish/v1/Systems/System.Embedded.1
          disableCertificateVerification: {{ disable_bmc_certificate_verification }}
{% else %}
          address: redfish-virtualmedia://{{ hostvars[host]['ipmi_address']|ipwrap }}:{{ hostvars[host]['ipmi_port']|default(623) }}
          disableCertificateVerification: {{ disable_bmc_certificate_verification }}
{% endif %}
          username: {{ hostvars[host]['ipmi_user'] }}
          password: {{ hostvars[host]['ipmi_password'] }}
        bootMACAddress: {{ hostvars[host]['provision_mac'] }}
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int < 6)) %}
{% if 'hardware_profile' in hostvars[host] %}
        hardwareProfile: {{ hostvars[host]['hardware_profile'] }}
{% else %}
        hardwareProfile: unknown
{% endif %}
{% endif %}
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 6)) %}
{% if bootmode is defined and bootmode == 'legacy' %}
        bootMode: legacy
{% endif %}
{% if 'root_device_hint' in hostvars[host] and 'root_device_hint_value' in hostvars[host] %}
        rootDeviceHints:
          {{ hostvars[host]['root_device_hint'] }}: '{{ hostvars[host]['root_device_hint_value'] }}'
{% endif %}
{% endif %}
{% if ((release_version.split('.')[0]|int == 4) and (release_version.split('.')[1]|int >= 10)) %}
{% if worker_network_config_template is defined %}
        networkConfig:
{{ lookup('template', worker_network_config_template, template_vars=hostvars[host]) | indent(10, true) }}
{% endif %}
{% endif %}
{% endfor %}
{% endif %}
pullSecret: '{{ pullsecret }}'
sshKey: |-
  {{ key }}
{% if ssh_extra_keys_paths is defined and ssh_extra_keys_paths|length %}
{% for ssh_key_path in ssh_extra_keys_paths %}
  {{ lookup('file', ssh_key_path | regex_replace('~', lookup('env', 'HOME'))) }}
{% endfor %}
{% endif %}
{% if install_config_appends is defined and install_config_appends|length %}
{{ install_config_appends }}
{% endif %}
