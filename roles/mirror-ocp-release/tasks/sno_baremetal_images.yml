---
# rhcos_json_vars fact already set in images.yml
- name: "Set Facts for RHCOS PXE"
  set_fact:
    rhcos_pxe_rootfs_name: "{{ rhcos_json_vars | json_query(rootfs_name) | basename }}"
    rhcos_pxe_rootfs_sha256: "{{ rhcos_json_vars | json_query(rootfs_sha) }}"
    rhcos_pxe_rootfs_url: "{{ rhcos_json_vars | json_query(rootfs_name) }}"
  vars:
    rootfs_name: 'architectures.x86_64.artifacts.metal.formats.pxe.rootfs.location'
    rootfs_sha: 'architectures.x86_64.artifacts.metal.formats.pxe.rootfs.sha256'
  tags:
    - cache
    - rhcospxe

- name: "Check if rootfs image exists"
  stat:
    path: "{{ cache_dir }}/{{ rhcos_pxe_rootfs_name }}"
    get_checksum: false
  register: rootfs_img
  tags:
    - cache
    - rhcospxe

- name: "Download {{ rhcos_pxe_rootfs_name }} for cache"
  get_url:
    url: "{{ rhcos_pxe_rootfs_url }}"
    dest: "{{ cache_dir }}/{{ rhcos_pxe_rootfs_name }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: '0644'
    setype: httpd_sys_content_t
    checksum: "sha256:{{ rhcos_pxe_rootfs_sha256 }}"
    timeout: 600
  register: rootfs_img_file
  retries: 3
  delay: 10
  until: rootfs_img_file is not failed
  become: true
  when:
    - not rootfs_img.stat.exists or force_mirroring
  tags:
    - cache
    - rhcospxe
...
