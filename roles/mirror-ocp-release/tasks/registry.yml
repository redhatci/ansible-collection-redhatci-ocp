---
- name: "OCP release mirror"
  block:
    - name: "Check if the release image is pullable from the local registry"
      command: >
        skopeo inspect
        --no-tags
        --authfile {{ mor_auths_file }}
        docker://{{ mor_registry_url }}/{{ mor_registry_path }}:{{ mor_version }}

<<<<<<< HEAD
    - name: "Check for cached imagecontentsourcepolicy file"
      stat:
        path: "{{ mor_cache_dir }}/{{ mor_version }}/imagecontentsourcepolicy.yaml"
        get_checksum: false
      register: target

    - name: "Force mirroring if imagecontentsourcepolicy does not exist"
=======
    - name: "Check for cached Image Source file"
      stat:
        path: "{{ mor_cache_dir }}/{{ mor_version }}/imagesource.yaml"
        get_checksum: false
      register: target

    - name: "Force mirroring if image source does not exist"
>>>>>>> mixin/main
      fail:
        msg: "Cached image contents does not exits, forcing mirroring"
      when: not target.stat.exists

    - name: "Force mirroring is enabled"
      fail:
        msg: "Forcing the release mirroring"
      when:
        - mor_force | bool

  rescue:
    - name: "Mirror release images to local registry"
      command: >
        {{ mor_cache_dir }}/{{ mor_version }}/oc adm release mirror
        --registry-config={{ mor_auths_file }}
        --from={{ ocp_release_data['container_image'] | quote }}
        --to-release-image={{ mor_registry_url }}/{{ mor_registry_path }}:{{ mor_version }}
        --to={{ mor_registry_url }}/{{ mor_registry_path }}
      retries: 3
      delay: 10
      register: result
      until: result.rc == 0

<<<<<<< HEAD
    - name: Generate ImageContentSourcePolicy
=======
    - name: Generate Image Source manifest
>>>>>>> mixin/main
      shell: >
        set -o pipefail &&
        echo -e "{{ result.stdout }}" |
        sed -n '/apiVersion/,$p' |
        sed -e 's/name:.*/name: release-{{ version }}/'
<<<<<<< HEAD
      register: icsp_release

    - name: "Write mirrored image content source policy"
      copy:
        dest: "{{ mor_cache_dir }}/{{ mor_version }}/imagecontentsourcepolicy.yaml"
=======
      register: is_release

    - name: Write Image Source manifest
      copy:
        dest: "{{ mor_cache_dir }}/{{ mor_version }}/imagesource.yaml"
>>>>>>> mixin/main
        owner: "{{ mor_owner }}"
        group: "{{ mor_group }}"
        mode: "0644"
        setype: httpd_sys_content_t
<<<<<<< HEAD
        content: "{{ icsp_release.stdout }}"
=======
        content: "{{ is_release.stdout }}"
>>>>>>> mixin/main
      become: true
...
