---
- name: "oc-setup : Get oc binary and KUBECONFIG auth/creds from provisioner node"
  delegate_to: "{{ groups['provisioner'][0] }}"
  fetch:
    src: "{{ item }}"
    dest: "{{ dci_cluster_configs_dir }}/"
    flat: true
  loop:
  - "/usr/local/bin/oc"
  - "{{ dir }}/auth/kubeconfig"
  - "{{ dir }}/auth/kubeadmin-password"

- name: "oc-setup : Give execution permissions to oc binary"
  file:
    path: '{{ dci_cluster_configs_dir }}/oc'
    mode: 0755

- name: "Get cluster install-config"
  community.kubernetes.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    api: v1
    kind: ConfigMap
    name: cluster-config-v1
    namespace: kube-system
  register: ic
  until: "'resources' in ic and ic.resources != []"
  retries: 12
  delay: 5

- name: "Save the install-config"
  vars:
    install_config: '{{ ic.resources[0].data["install-config"] }}'
  copy:
    content: "{{ install_config }}"
    dest: "{{ dci_cluster_configs_dir }}/cluster-install-config.yml"
    mode: 0600
  when:
    - ic.resources | length == 1

- name: "Upload install-config to DCI Control Server"
  environment:
    - DCI_CLIENT_ID: "{{ hostvars.localhost.dci_client_id }}"
    - DCI_API_SECRET: "{{ hostvars.localhost.dci_api_secret }}"
    - DCI_CS_URL: "{{ hostvars.localhost.dci_cs_url }}"
  dci_file:
    path: "{{ item }}"
    name: "{{ item | basename }}"
    job_id: "{{ hostvars.localhost.job_id }}"
    mime: "text/plain"
  loop:
  - "{{ dci_cluster_configs_dir }}/cluster-install-config.yml"
  when:
    - ic.resources | length == 1

- name: "Upload creds files to DCI Control Server"
  environment:
    - DCI_CLIENT_ID: "{{ hostvars.localhost.dci_client_id }}"
    - DCI_API_SECRET: "{{ hostvars.localhost.dci_api_secret }}"
    - DCI_CS_URL: "{{ hostvars.localhost.dci_cs_url }}"
  dci_file:
    path: "{{ item }}"
    name: "{{ item | basename }}"
    job_id: "{{ hostvars.localhost.job_id }}"
    mime: "text/plain"
  loop:
  - "{{ dci_cluster_configs_dir }}/kubeconfig"
  - "{{ dci_cluster_configs_dir }}/kubeadmin-password"

- name: "oc-setup : Install packages needed for login"
  package:
    name: httpd-tools
    state: present
  become: true

- name: "oc-setup : Create .kube directory"
  delegate_to: "{{ groups['provisioner'][0] }}"
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0750'

- name: "Check if .kube/config exists"
  delegate_to: "{{ groups['provisioner'][0] }}"
  stat:
    path: "{{ ansible_env.HOME }}/.kube/config"
    get_checksum: false
  register: kube_config

- name: "oc-setup : Symlink kubeconfig to .kube/config"
  delegate_to: "{{ groups['provisioner'][0] }}"
  file:
    src: "{{ dir }}/auth/kubeconfig"
    dest: "{{ ansible_env.HOME }}/.kube/config"
    state: link
  when:
    - not kube_config.stat.exists
...
