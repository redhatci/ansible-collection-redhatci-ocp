---
- name: "Check if the release artifacts are in the cache"
  ansible.builtin.stat:
    path: "{{ mor_cache_dir }}/{{ mor_version }}/release.txt"
    get_checksum: false
  register: _mor_target
  when:
    - not mor_force

- name: "Extract the OCP installer and metadata"
  when:
    - mor_force or not _mor_target.stat.exists
  block:
    - name: "Extract installer and metadata from release image"
      ansible.builtin.shell: >
        flock -x {{ mor_cache_dir }}/{{ mor_version }}/release_extract.lock -c '
        set -e;
        {{ mor_oc }} adm release extract
        --registry-config {{ mor_auths_file }}
        --command={{ mor_installer }}
        --from {{ mor_pull_url }}
        --to "{{ mor_cache_dir }}/{{ mor_version }}";
        {{ mor_oc }} adm release extract
        --registry-config {{ mor_auths_file }}
        --tools
        --from {{ mor_pull_url }}
        --to "{{ mor_cache_dir }}/{{ mor_version }}"'
      register: _mor_extract_res
      retries: 9
      delay: 10
      until: _mor_extract_res is not failed
      changed_when: false

    - name: "Extract rhcos.json if version >= 4.8"
      when:
        - mor_version is version("4.8", ">=")
      ansible.builtin.shell: >
        flock -x "{{ mor_cache_dir }}/{{ mor_version }}/release_extract.lock" -c '{
        "{{ mor_cache_dir }}/{{ mor_version }}/{{ mor_installer }}" coreos print-stream-json >
        "{{ mor_cache_dir }}/{{ mor_version }}/rhcos.json";
        }'

    - name: "Download rhcos.json (< 4.8)"
      when:
        - mor_version is version("4.8", "<")
      block:
        - name: "Get Git SHA from installer"
          ansible.builtin.shell: >
            set -e -o pipefail;
            {{ mor_cache_dir }}/{{ mor_version }}/openshift-baremetal-install version |
            grep "^built from" |
            awk '{ print $NF }'
          register: _mor_commit_id
          changed_when: false

        - name: "Fetch rhcos.json"
          ansible.builtin.include_tasks: fetch.yml
          vars:
            mor_uri: "https://raw.githubusercontent.com/openshift/installer/{{ _mor_commit_id.stdout }}/data/data/rhcos.json"
            mor_dir: "{{ mor_cache_dir }}/{{ mor_version }}"

    - name: "Figure out status of SELinux"
      ansible.builtin.command: /usr/sbin/selinuxenabled
      ignore_errors: true
      register: _mor_selinux_status
      changed_when: false

    - name: Apply SELinux container file context to extracted files
      ansible.builtin.sefcontext:
        target: "{{ mor_cache_dir }}/{{ mor_version }}"
        setype: container_file_t
      become: true
      register: _mor_cache_secontext
      retries: 3
      delay: 5
      until: _mor_cache_secontext is not failed
      when:
        - _mor_selinux_status.rc == 0

    - name: "Make installer command readable from HTTP"
      ansible.builtin.file:
        path: "{{ mor_cache_dir }}/{{ mor_version }}/{{ mor_installer }}"
        state: file
        owner: "{{ mor_owner }}"
        mode: "0755"
        setype: "httpd_sys_content_t"
      register: _mor_install_mode
      retries: 3
      delay: 5
      until: _mor_install_mode is not failed

  always:
    - name: "Ensure lock file is removed"
      ansible.builtin.file:
        path: "{{ mor_cache_dir }}/{{ mor_version }}/release_extract.lock"
        state: absent
...
