---
- name: "Check if the release artifacts are in the cache"
  ansible.builtin.stat:
    path: "{{ mor_cache_dir }}/{{ mor_version }}/release.txt"
    get_checksum: false
  register: _mor_target
  when:
    - not mor_force

- name: Create temporary working directory
  ansible.builtin.tempfile:
    state: directory
    prefix: mor-
  register: _mor_tmp
  when: mor_force or not _mor_target.stat.exists

- name: "Extract the OCP installer and metadata"
  when:
    - mor_force or not _mor_target.stat.exists
  block:
    - name: "Extract installer from release image"
      ansible.builtin.command: >
        {{ mor_oc }} adm release extract
        --registry-config {{ mor_auths_file }}
        --command={{ mor_installer }}
        --from {{ mor_pull_url }}
        --to "{{ _mor_tmp.path }}"
      register: _mor_extract_res
      retries: 9
      delay: 10
      until: _mor_extract_res is not failed
      changed_when: _mor_extract_res.rc == 0

    - name: "Extract metadata from release image"
      ansible.builtin.command: >
        {{ mor_oc }} adm release extract
        --registry-config {{ mor_auths_file }}
        --tools
        --from {{ mor_pull_url }}
        --to "{{ _mor_tmp.path }}"
      register: _mor_extract_res
      retries: 9
      delay: 10
      until: _mor_extract_res is not failed
      changed_when: _mor_extract_res.rc == 0

    - name: "Extract rhcos.json if version >= 4.8"
      when:
        - mor_version is version("4.8", ">=")
      ansible.builtin.shell: >
        "{{ _mor_tmp.path }}/{{ mor_installer }}" coreos print-stream-json >
        "{{ _mor_tmp.path }}/rhcos.json"
      args:
        creates: "{{ _mor_tmp.path }}/rhcos.json"

    - name: "Download rhcos.json (< 4.8)"
      when:
        - mor_version is version("4.8", "<")
      block:
        - name: "Get Git SHA from installer"
          ansible.builtin.shell: >
            set -e -o pipefail;
            {{ _mor_tmp.path }}/openshift-baremetal-install version |
            grep "^built from" |
            awk '{ print $NF }'
          register: _mor_commit_id
          changed_when: false

        - name: "Fetch rhcos.json"
          ansible.builtin.include_tasks: fetch.yml
          vars:
            mor_uri: "https://raw.githubusercontent.com/openshift/installer/{{ _mor_commit_id.stdout }}/data/data/rhcos.json"
            mor_dir: "{{ _mor_tmp.path }}"

    - name: "Figure out status of SELinux"
      ansible.builtin.command: /usr/sbin/selinuxenabled
      ignore_errors: true
      register: _mor_selinux_status
      changed_when: false

    - name: Copy artifacts with access policies to release directory
      ansible.builtin.shell: |
        flock -x {{ mor_cache_dir }}/{{ mor_version }}/f.lock -c '
        set -e;
        rsync -avz {{ _mor_tmp.path }}/ {{ mor_cache_dir }}/{{ mor_version }}/;{% if _mor_selinux_status.rc == 0 %}
        chcon -R -t container_file_t {{ mor_cache_dir }}/{{ mor_version }};
        chcon -t httpd_sys_content_t {{ mor_cache_dir }}/{{ mor_version }}/{{ mor_installer }};{% endif %}
        chmod 755 {{ mor_cache_dir }}/{{ mor_version }}/{{ mor_installer }};
        '
      register: _mor_cache_copy
      retries: 3
      delay: 5
      until: _mor_cache_copy is not failed
  always:
    - name: Remove temporary directory
      ansible.builtin.file:
        path: "{{ _mor_tmp.path }}"
        state: absent
...
