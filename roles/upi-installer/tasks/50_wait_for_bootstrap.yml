---
- name: Power off nodes
  ipmi_power:
    name: "{{ hostvars[item]['ipmi_address'] }}"
    user: "{{ hostvars[item]['ipmi_user'] }}"
    password: "{{ hostvars[item]['ipmi_password'] }}"
    port: "{{ hostvars[item]['ipmi_port'] | default(623) }}"
    state: off
  register: power_off_hosts
  until: power_off_hosts is not failed
  retries: 10
  delay: 5
  loop: "{{ groups['masters'] + groups['workers'] + groups['bootstrap'] }}"

- name: Set boot to network
  ipmi_boot:
    name: "{{ hostvars[item]['ipmi_address'] }}"
    user: "{{ hostvars[item]['ipmi_user'] }}"
    password: "{{ hostvars[item]['ipmi_password'] }}"
    port: "{{ hostvars[item]['ipmi_port'] | default(623) }}"
    bootdev: network
  register: network_boot_hosts
  until: network_boot_hosts is not failed
  retries: 10
  delay: 5
  loop: "{{ groups['masters'] + groups['workers'] + groups['bootstrap'] }}"

- name: Power on nodes
  ipmi_power:
    name: "{{ hostvars[item]['ipmi_address'] }}"
    user: "{{ hostvars[item]['ipmi_user'] }}"
    password: "{{ hostvars[item]['ipmi_password'] }}"
    port: "{{ hostvars[item]['ipmi_port'] | default(623) }}"
    state: on
  register: power_on_hosts
  until: power_on_hosts is not failed
  retries: 10
  delay: 5
  loop: "{{ groups['masters'] + groups['workers'] + groups['bootstrap'] }}"

- name: Generate nodes var
  set_fact:
    nodes: "{{ nodes | default([]) + [{ 'node': item, 'ipmi_address': hostvars[item]['ipmi_address'], 'ipmi_user': hostvars[item]['ipmi_user'], 'ipmi_password': hostvars[item]['ipmi_password'], 'ipmi_port': hostvars[item]['ipmi_port'] | default(623) }] }}"
  loop: "{{ groups['masters'] + groups['workers'] + groups['bootstrap'] }}"

- name: Wait for nodes to provision
  upi_bootstrap:
    nodes: "{{ nodes }}"
    hostname: "{{ bootstrap_interface }}"
    serverport: "{{ serverport }}"
    timeout: "{{ timeout }}"
  become: true

- name: Power off nodes
  ipmi_power:
    name: "{{ hostvars[item]['ipmi_address'] }}"
    user: "{{ hostvars[item]['ipmi_user'] }}"
    password: "{{ hostvars[item]['ipmi_password'] }}"
    port: "{{ hostvars[item]['ipmi_port'] | default(623) }}"
    state: off
  register: power_off_hosts
  until: power_off_hosts is not failed
  retries: 10
  delay: 5
  loop: "{{ groups['masters'] + groups['workers'] + groups['bootstrap'] }}"

- name: Power on nodes
  ipmi_power:
    name: "{{ hostvars[item]['ipmi_address'] }}"
    user: "{{ hostvars[item]['ipmi_user'] }}"
    password: "{{ hostvars[item]['ipmi_password'] }}"
    port: "{{ hostvars[item]['ipmi_port'] | default(623) }}"
    state: on
  register: power_on_hosts
  until: power_on_hosts is not failed
  retries: 10
  delay: 5
  loop: "{{ groups['masters'] + groups['workers'] + groups['bootstrap'] }}"

- name: Wait for Bootstrap to Complete
  shell: |
    {{ ocp_binary_path }}/openshift-install --dir {{ dir }} --log-level debug wait-for bootstrap-complete
  register: wait_for_bootstrap_result
  until: wait_for_bootstrap_result is succeeded
  retries: "{{ increase_bootstrap_timeout| default(1)| int }}"
  delay: 1

- name: Power off Bootstrap Node
  ipmi_power:
    name: "{{ hostvars[item]['ipmi_address'] }}"
    user: "{{ hostvars[item]['ipmi_user'] }}"
    password: "{{ hostvars[item]['ipmi_password'] }}"
    port: "{{ hostvars[item]['ipmi_port'] | default(623) }}"
    state: off
  register: power_off_hosts
  until: power_off_hosts is not failed
  retries: 10
  delay: 5
  loop: "{{ groups['bootstrap'] }}"
...
