---
- name: Define OCS Storage Cluster settings
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'openshift-storage-cluster.yml.j2') }}"
  register: intocsresult
  when:
    - ocs_install_type == 'internal'
    
- name: Patch Deployment to update Memory limits
  kubernetes.core.k8s:
    definition:
      apiVersion: apps/v1
      namespace: "{{ ocs_storage_namespace }}"
      kind: Deployment
      name: ocs-client-operator-controller-manager
      merge_type: strategic
      spec:
        template:
          spec:
            containers:
              - name: manager
                resources:
                  requests:
                    memory: "400Mi"
                  limits:
                    memory: "400Mi"
  when:
    - dci_workarounds is defined
    - '"DFBUGS-1932" in dci_workarounds'            
    
    
- name: Tasks for External OCS/ODF Integration
  when:
    - ocs_install_type == 'external'
  block:
    - name: Define External RHCS Cluster Settings in a secret
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: rook-ceph-external-cluster-details
            namespace: "{{ ocs_storage_namespace }}"
          data:
            external_cluster_details: >-
              {{ external_ceph_data | string | b64encode }}
          type: Opaque

    - name: Enable External OCS Storage Cluster
      kubernetes.core.k8s:
        definition: "{{ lookup('template', 'openshift-storage-cluster.yml.j2') }}"
      register: extocsresult

    - name: "Give a delay for OCS to deploy pods"
      ansible.builtin.pause:
        seconds: 60
      when:
        - extocsresult.changed | bool

- name: Get OCS health status
  kubernetes.core.k8s_info:
    kind: CephCluster
    namespace: "{{ ocs_storage_namespace }}"
    name: "{{ ocs_storagecluster_name }}-cephcluster"
  register: ocs_health_status
  retries: 60
  delay: 20
  until:
    - ocs_health_status.resources is defined
    - ocs_health_status.resources[0].status is defined
    - ("'Connected' in ocs_health_status.resources[0].status.state") or ("'Ready' in ocs_health_status.resources[0].status.state")
    - ocs_health_status.resources[0].status.ceph is defined
    - "'HEALTH_ERR' not in ocs_health_status.resources[0].status.ceph.health"

- name: Deploy the Rook-Ceph toolbox pod
  kubernetes.core.k8s:
    definition:
      apiVersion: ocs.openshift.io/v1
      kind: OCSInitialization
      metadata:
        name: ocsinit
        namespace: "{{ ocs_storage_namespace }}"
      spec:
        enableCephTools: true
  when:
    - ocs_install_type == 'internal'

- name: Check OCS Storage Class exists
  kubernetes.core.k8s_info:
    kind: StorageClass
    name: "{{ ocs_default_storage_class }}"
  register: ocs_storage_class
  retries: 30
  delay: 10
  until: ocs_storage_class.resources != []

- name: Set Default Openshift Storage Class
  kubernetes.core.k8s:
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: "{{ ocs_default_storage_class }}"
        annotations:
          "{{ default_storageclass_annotation }}"
...
