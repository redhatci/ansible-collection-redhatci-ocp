---
- name: Get Kubeconfig secret
  kubernetes.core.k8s_info:
    api: v1
    kind: Secret
    name: "{{ utils_cluster_name }}-admin-kubeconfig"
    namespace: "{{ utils_cluster_namespace }}"
  register: kubeconfig_secret
  retries: 15
  delay: 10
  until:
    - kubeconfig_secret.resources is defined
    - kubeconfig_secret.resources | length
  no_log: false

- name: Get kubeadmin credentials for HCP
  when:
    - kubeconfig_secret.resources[0].metadata.labels.keys() | list is search('hypershift') or
      kubeconfig_secret.resources[0].metadata.annotations.keys() | default({}) | list is search('hypershift')
  block:
    - name: Get kubeadmin credentials for HCP
      kubernetes.core.k8s_info:
        api: v1
        kind: Secret
        name: "{{ utils_cluster_name }}-kubeadmin-password"
        namespace: "{{ utils_cluster_namespace }}"
      register: kubeadmin_secret
      retries: 15
      delay: 10
      until:
        - kubeadmin_secret.resources is defined
        - kubeadmin_secret.resources | length
      no_log: true

    - name: Set kubeadmin credtials for non-HCP
      ansible.builtin.set_fact:
        acm_kubeconfig_user: 'kubeadmin'
        acm_kubeconfig_pass: '{{ kubeadmin_secret.resources[0].data["password"] | b64decode }}'
      no_log: true

- name: Get kubeadmin credentials for non-HCP
  when:
    - kubeconfig_secret.resources[0].metadata.labels.keys() | list is not search('hypershift')
    - kubeconfig_secret.resources[0].metadata.annotations.keys() | default({}) | list is not search('hypershift')
  block:
    - name: Get kubeadmin credentials for non-HCP
      kubernetes.core.k8s_info:
        api: v1
        kind: Secret
        name: "{{ utils_cluster_name }}-admin-password"
        namespace: "{{ utils_cluster_namespace }}"
      register: kubeadmin_secret
      retries: 15
      delay: 10
      until:
        - kubeadmin_secret.resources is defined
        - kubeadmin_secret.resources | length
      no_log: true

    - name: Set kubeadmin credentials for non-HCP
      ansible.builtin.set_fact:
        acm_kubeconfig_user: '{{ kubeadmin_secret.resources[0].data["username"] | b64decode }}'
        acm_kubeconfig_pass: '{{ kubeadmin_secret.resources[0].data["password"] | b64decode }}'
      no_log: true

- name: Set kubeadmin facts
  ansible.builtin.set_fact:
    acm_kubeconfig_text: '{{ kubeconfig_secret.resources[0].data["kubeconfig"] | b64decode }}'
  no_log: true
...
