---
- name: Create namespace for SR-IOV operator
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: openshift-sriov-network-operator
        labels:
          openshift.io/run-level: "1"

- name: Create operatorgroup for SR-IOV operator
  k8s:
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: sriov-network-operators
        namespace: openshift-sriov-network-operator
      spec:
        targetNamespaces:
        - openshift-sriov-network-operator

- name: Create subscription for SR-IOV operator with channel (4.5 and older)
  k8s:
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: sriov-network-operator-subsription
        namespace: openshift-sriov-network-operator
      spec:
        name: sriov-network-operator
        source: "{{ redhat_catalog_source }}"
        sourceNamespace: "{{ opm_catalog_source_namespace | default('openshift-marketplace') }}"
        channel: "{{ ocp_version|string }}"
  when:
    - ocp_version_maj|int == 4
    - ocp_version_min|int <= 5

- name: Create subscription for SR-IOV operator without channel
  k8s:
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: sriov-network-operator-subscription
        namespace: openshift-sriov-network-operator
      spec:
        name: sriov-network-operator
        source: "{{ redhat_catalog_source }}"
        sourceNamespace: "{{ opm_catalog_source_namespace | default('openshift-marketplace') }}"
  when:
    - ocp_version_maj|int == 4
    - ocp_version_min|int >= 6

- name: get sriov-network-operator csv
  k8s_info:
    api: operators.coreos.com/v1alpha1
    namespace: openshift-sriov-network-operator
    kind: ClusterServiceVersion
  register: csv
  retries: 30
  delay: 5
  no_log: true
  until:
    - "csv.resources|length == 1"
    - "'status' in csv.resources[0]"
    - "'phase' in csv.resources[0].status"
    - "csv.resources[0].status.phase == 'Succeeded'"

# TODO: Convert this in to a loop for applying multiple configurations
# sriov_network:
#   - name: sriov-network-intel-numa0
#     vlan: 500
#     resource: intelnuma0
#     numvfs: 16
#     namespace: example-cnf
#     devices:
#       - ens2f1
#   - name: sriov-network-intel-numa1
#     vlan: 501
#     resource: intelnuma1
#     numvfs: 16
#     namespace: example-cnf
#     devices:
#       - ens3f1
- name: create SriovNetworkNodePolicy for intel nic ens2f1 - 1
  k8s:
    definition: "{{ lookup('template', 'sriov-policy.yaml.j2') }}"
  vars:
    name: intel-numa0-policy1
    resource_name:  intel_numa0_res1
    num_vfs: 32
    interfaces: ["ens2f1#0-15"]

- name: create SriovNetworkNodePolicy for intel nic ens2f1 - 2
  k8s:
    definition: "{{ lookup('template', 'sriov-policy.yaml.j2') }}"
  vars:
    name: intel-numa0-policy2
    resource_name:  intel_numa0_res2
    num_vfs: 32
    interfaces: ["ens2f1#16-31"]

# Ensure namespace for the provided variable 'sriov_network_target_namespace' is present
- name: "create namespace"
  k8s:
    api: v1
    kind: Namespace
    name: "{{ sriov_network_target_namespace }}"

- name: create SriovNetwork for Intel nic ens2f1 - 1
  k8s:
    definition: "{{ lookup('template', 'sriov-network.yaml.j2') }}"
  vars:
    sriov_network_name: intel-numa0-net1
    sriov_network_resource: intel_numa0_res1
    sriov_network_vlan: "{{ sriov_network_vlan_intel_numa0 }}"

- name: create SriovNetwork for Intel nic ens2f1 - 2
  k8s:
    definition: "{{ lookup('template', 'sriov-network.yaml.j2') }}"
  vars:
    sriov_network_name: intel-numa0-net2
    sriov_network_resource: intel_numa0_res2
    sriov_network_vlan: "{{ sriov_network_vlan_intel_numa0 }}"

- name: Get all nodes
  k8s_info:
    kind: Node
  register: nodes
  no_log: true

- name: Get one worker node
  set_fact:
    worker_node: "{{ item.metadata.name }}"
  when: "'node-role.kubernetes.io/worker' in item.metadata.labels"
  loop: "{{ nodes.resources }}"
  no_log: true

- name: Get SriovNetworkNodeState for one of the worker node
  k8s_info:
    api: sriovnetwork.openshift.io/v1
    kind: SriovNetworkNodeState
    namespace: openshift-sriov-network-operator
    name: "{{ worker_node }}"
  register: state
  retries: 300
  delay: 10
  until:
    - "state.resources|length == 1"
    - "'interfaces' in state.resources[0].spec"
    - "state.resources[0].spec.interfaces|length > 0"
    - "'syncStatus' in state.resources[0].status"
    - "state.resources[0].status.syncStatus == 'Succeeded'"

- name: Check nodes
  include_role:
    name: prepare-cnf
    tasks_from: nodes-ok.yml
  vars:
    call_from: "operator-sriov"
...
