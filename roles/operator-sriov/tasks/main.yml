---
- name: Create namespace for SR-IOV operator
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: openshift-sriov-network-operator
        labels:
          openshift.io/run-level: "1"

- name: Create operatorgroup for SR-IOV operator
  k8s:
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: sriov-network-operators
        namespace: openshift-sriov-network-operator
      spec:
        targetNamespaces:
          - openshift-sriov-network-operator

- name: Create subscription for SR-IOV operator with channel (4.5 and older)
  k8s:
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: sriov-network-operator-subscription
        namespace: openshift-sriov-network-operator
      spec:
        name: sriov-network-operator
        source: "{{ opm_catalog_source_name }}"
        sourceNamespace: "{{ opm_catalog_source_namespace | default('openshift-marketplace') }}"
        channel: "{{ ocp_version|string }}"
  when:
    - ocp_version_maj|int == 4
    - ocp_version_min|int <= 5

- name: Create subscription for SR-IOV operator without channel
  k8s:
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: sriov-network-operator-subscription
        namespace: openshift-sriov-network-operator
      spec:
        name: sriov-network-operator
        source: "{{ opm_catalog_source_name }}"
        sourceNamespace: "{{ opm_catalog_source_namespace | default('openshift-marketplace') }}"
  when:
    - ocp_version_maj|int == 4
    - ocp_version_min|int >= 6

- name: "Get SRIOV InstallPlan details"
  k8s_info:
    api: operators.coreos.com/v1alpha1
    kind: InstallPlan
    namespace: openshift-sriov-network-operator
  register: sriov_ip
  retries: 30
  delay: 5
  until:
    - "sriov_ip.resources|length  >= 1"
    - "'spec' in sriov_ip.resources[0]"
    - "'clusterServiceVersionNames' in sriov_ip.resources[0].spec"

- name: "Set SRIOV CSV name from IP"
  set_fact:
    sriov_csv_name: "{{ sriov_ip.resources[0].spec.clusterServiceVersionNames[0] }}"

- name: get CSVs in sriov-network-operator ns
  k8s_info:
    api: operators.coreos.com/v1alpha1
    namespace: openshift-sriov-network-operator
    kind: ClusterServiceVersion
    name: "{{ sriov_csv_name }}"
  register: csv
  retries: 30
  delay: 5
  #no_log: true
  until:
    - "csv.resources|length == 1"
    - "'status' in csv.resources[0]"
    - "'phase' in csv.resources[0].status"
    - "csv.resources[0].status.phase == 'Succeeded'"

# Expecting variables in an array on this form
# sriov_network:
#  - name: intel-numa0-net1
#    vlan: 460
#    policy: intel-numa0-policy1
#    resource: intel_numa0_res1
#    numvfs: 16
#    mtu: 9000
#    device_type: vfio-pci
#    devices:
#      - ens2f1#0-15
#    target_namespace: example-cnf
# or
#  - policy: intel-dpdk-node-policy
#    resource: intelnics
#    numvfs: 4
#    vendor: 8086
#    deviceid: 1592
#    devices:
#      - ens4f0
#    rootdevices:
#      - "0000:d8:00.0"
#    nodeselector: '"node.openshift.io/nic_type": "intel810"'
- name: "Load SRIOV parameters from inventory file"
  set_fact:
    sriov_network: "{{ lookup('file', sriov_network_file) | from_json }}"
  when: sriov_network_file is defined
  delegate_to: localhost

- name: "Setup SRIOV policies, target namespaces, and networks"
  include_tasks: sriov-setup.yml
  loop: "{{ sriov_network }}"
  loop_control:
    loop_var: sriov
  when: sriov_network is defined

- name: Get all nodes
  k8s_info:
    kind: Node
  register: nodes
  #no_log: true

- name: Add sriov label to worker nodes
  shell: |
    oc label node {{ item.metadata.name }} feature.node.kubernetes.io/network-sriov.capable="true"
  when: "'node-role.kubernetes.io/worker' in item.metadata.labels"
  loop: "{{ nodes.resources }}"

- name: Get one worker node
  set_fact:
    worker_node: "{{ item.metadata.name }}"
  when: "'node-role.kubernetes.io/worker' in item.metadata.labels"
  loop: "{{ nodes.resources }}"
  #no_log: true

- name: Get SriovNetworkNodeState for one of the worker node
  k8s_info:
    api: sriovnetwork.openshift.io/v1
    kind: SriovNetworkNodeState
    namespace: openshift-sriov-network-operator
    name: "{{ worker_node }}"
  register: state
  retries: 300
  delay: 10
  until:
    - "state.resources|length == 1"
    - "'interfaces' in state.resources[0].spec"
    - "state.resources[0].spec.interfaces|length > 0"
    - "'syncStatus' in state.resources[0].status"
    - "state.resources[0].status.syncStatus == 'Succeeded'"

- name: Check nodes
  include_role:
    name: prepare-cnf
    tasks_from: nodes-ok.yml
  vars:
    call_from: "operator-sriov"
...
