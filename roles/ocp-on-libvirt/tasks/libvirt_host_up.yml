- name: "Does node already exist"
  ignore_errors: yes
  virt:
    name: "{{ host['name'] }}"
    command: status
  register: node_exists

- name: "set qemu_path"
  set_fact:
    qemu_path: "{{ (ansible_distribution in ['CentOS','RedHat']) | ternary('/usr/libexec/', '/usr/bin/') }}"

- name: "Copy image_src:"
  include: copy_image_src.yml
  when: node_exists['failed'] is defined

- name: "Add additional storage"
  command: "qemu-img resize {{ libvirt_image_path }}/{{ host['name'] }}.qcow2 +{{ host['disk_size'] }}"
  become: "{{ libvirt_become }}"
  when: host['disk_size'] is defined and node_exists['failed'] is defined

- name: "Create directories"
  file:
    path: "/tmp/vm-{{ host['name'] }}"
    state: "directory"
  when: node_exists['failed'] is defined

- name: "Prepare cloud-config/user-data-local"
  template:
    src: "templates/cloud-config/user-data"
    dest: "/tmp/vm-{{ host['name'] }}/user-data"
  when: node_exists['failed'] is defined

- name: "Prepare cloud-config/meta-data"
  template:
    src: "templates/cloud-config/meta-data"
    dest: "/tmp/vm-{{ host['name'] }}/meta-data"
  when: node_exists['failed'] is defined

- name: "Generate ci data cd image for cloud-init when cloud config is defined"
  command: |
    mkisofs -o /tmp/vm-{{ host['name'] }}.iso -V cidata -r -J
            --quiet /tmp/vm-{{ host['name'] }}/user-data
            /tmp/vm-{{ host['name'] }}/meta-data
  become: "{{ libvirt_become }}"
  when: node_exists['failed'] is defined

- name: "define node"
  virt:
    name: "{{ host['name'] }}"
    command: define
    xml: "{{ lookup('template', 'libvirt_node.xml.j2') }}"
  when: node_exists['failed'] is defined

- name: sync memory data to disk
  command: sync

- name: "Start VM"
  virt:
    name: "{{ host['name'] }}"
    state: "running"

- name: "Wait for the vm to shut down"
  virt:
    name: "{{ host['name'] }}"
    command: status
  register: vmstatus
  until: vmstatus.status == 'shutdown'
  retries: 1500
  delay: 10
  when: node_exists['failed'] is defined

- name: "Remove cdrom (cloud-init)"
  command: virsh change-media {{ host['name'] }} hda --eject --config
  become: "{{ libvirt_become }}"
  when: node_exists['failed'] is defined

- name: sync memory data to disk
  command: sync

- name: "Start VM again"
  virt:
    name: "{{ host['name'] }}"
    state: "running"
  when: node_exists['failed'] is defined
