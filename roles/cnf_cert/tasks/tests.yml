---
- name: Template tnf_config.yml
  template:
    src: templates/tnf_config.yml.j2
    dest: "{{ tnf_dir }}/{{ test_network_function_project_name }}/tnf_config.yml"

# Just do this in case preflight test suite is used.
# Use authentication file for private registry
- name: Set authentication for registry access
  include_tasks: prepare_json_authentication.yml
  when: "'preflight' in tnf_labels and partner_creds|length"

- name: Remove XML JUnit results if they exist
  file:
    path: "{{ tnf_dir }}/{{ test_network_function_project_name }}/cnf-certification-tests_junit.xml"
    state: absent

# The task automatically append these environment variables to tnf_env_vars:
# - TNF_PARTNER_REPO
# - TNF_IMAGE
# - SUPPORT_IMAGE
# We have to set ignore_errors to true because, if any tnf test fails, the result of the execution will be failed.
# We will check log files afterwards to really determine if there were errors in the execution or not.
- name: Run the CNF Test Suite
  vars:
    tnf_partner_repo: "{{ ( dci_local_registry | length ) | ternary(dci_local_registry, 'quay.io') }}/testnetworkfunction"
    support_image: "debug-partner:{{ support_image_version }}"
  environment: "{{ tnf_env_vars | combine({'TNF_PARTNER_REPO': tnf_partner_repo, 'TNF_IMAGE': tnf_image, 'SUPPORT_IMAGE': support_image}) }}"
  shell: |
    set -x

    ./run-tnf-container.sh -k {{ kubeconfig_path }} \
    -t {{ tnf_dir }}/{{ test_network_function_project_name }} \
    -o {{ tnf_dir }}/{{ test_network_function_project_name }} \
    {% if tnf_labels|length %}-l '{{ tnf_labels }}' \{% endif %}
    {% if tnf_dockercfg_path is defined %}-c {{ tnf_dockercfg_path }} \{% endif %}
    -i {{ tnf_image }} &> {{ test_network_function_project_name }}/dci-tnf-execution.log
  args:
    chdir: "{{ tnf_dir }}"
  ignore_errors: true

# Clean images just after finishing the execution
- name: Remove local tnf image
  containers.podman.podman_image:
    name: "{{ tnf_image }}"
    state: absent

- name: Logging tasks after finishing the execution of CNF Cert
  include_tasks: logging.yml

...
