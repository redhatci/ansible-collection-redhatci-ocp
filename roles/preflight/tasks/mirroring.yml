---
- name: Retrieve all images to mirror
  vars:
    busybox_images: "{{ (lookup('file', 'files/scorecard-busybox-ubi.yaml') | from_yaml)['images'] }}"
    preflight_bundle_images: "{{ preflight_operators_to_check | map(attribute='bundle_image') | list }}"
  set_fact:
    preflight_images: "{{ (preflight_assets_images + busybox_images + preflight_bundle_images) | unique }}"

- name: Mirror preflight images
  # Deactivate mirroring of busybox images to workaround docker pull limits.
  # TODO: to delete vars section here and mirror preflight_images.
  vars:
    preflight_bundle_images: "{{ preflight_operators_to_check | map(attribute='bundle_image') | list }}"
    preflight_images_to_mirror: "{{ (preflight_assets_images + preflight_bundle_images) | unique }}"
  shell: >
    skopeo copy
    --all
    --remove-signatures
    --authfile {{ partner_creds }}
    --dest-tls-verify=false
    docker://{{ item }}
    docker://{{ provisionhost_registry }}/{{ '/'.join(item.split('@')[0].split('/')[1:]) }}
  loop: "{{ preflight_images_to_mirror }}"

- name: "Define catalog tag"
  set_fact:
    index_tag: "{{ ansible_date_time.iso8601_basic }}"

- name: Generate catalog path
  set_fact:
    OO_INDEX: "{{ '/'.join([ provisionhost_registry ] + [ 'preflight','disconnected-catalog']) }}:{{ index_tag }}"

- name: Create temporary directory
  tempfile:
    state: directory
    prefix: preflight_prerun_tmp_dir.
  register: preflight_prerun_tmp_dir

- name: Build index image in temporary preflight directory < 4.9
  vars:
    preflight_bundle_images: "{{ preflight_operators_to_check | map(attribute='bundle_image') | list | unique }}"
  environment:
    - REGISTRY_AUTH_FILE: "{{ partner_creds }}"
  shell:
    cmd: >
      {{ opm_tool_path }} index add --pull-tool podman
      --bundles {{ ','.join(preflight_bundle_images) }}
      --tag {{ OO_INDEX }}
    chdir: "{{ preflight_prerun_tmp_dir.path }}"
  when: ocp_version_min | int < 9

- name: Build index image in temporary preflight directory >= 4.9 (FBC)
  block:
    - name: "Create index directory"
      file:
        path: "{{ preflight_prerun_tmp_dir.path }}/disconnected-catalog"
        state: directory
        mode: 0755

    - name: Build index image in temporary preflight directory
      include_tasks: mirroring_add_operator.yml
      loop: "{{ preflight_operators_to_check }}"
      loop_control:
        loop_var: operator
        label: "{{ operator.name }}"

    - name: "Validate catalog"
      shell: |
        {{ opm_tool_path }} validate disconnected-catalog
      args:
        chdir: "{{ preflight_prerun_tmp_dir.path }}"
      register: catalog_validation
      failed_when: catalog_validation.rc != 0

    - name: "Add Dockerfile"
      copy:
        src: disconnected-catalog.Dockerfile
        dest: "{{ preflight_prerun_tmp_dir.path }}/disconnected-catalog.Dockerfile"
        mode: 644

    - name: "Build operator catalog"
      shell: |
        podman build . \
        -f disconnected-catalog.Dockerfile \
        -t {{ OO_INDEX }}
      args:
        chdir: "{{ preflight_prerun_tmp_dir.path }}"

  when: ocp_version_min | int >= 9

- name: Push index image into local registry
  shell: >
    podman push
    --authfile {{ partner_creds }}
    {{ OO_INDEX }}

- name: Manage imageContentSourcePolicy update
  block:
    - name: "Get catalog SHA256"
      shell:
        cmd: |
          skopeo inspect --authfile {{ pullsecret_tmp_file }} \
          docker://{{ OO_INDEX }} | jq -r '.Digest'
      register: catalog_sha
      retries: 5
      delay: 5
      until:
        - catalog_sha is not failed

    - name: "Remove local catalog image"
      shell: |
        podman rmi "{{ OO_INDEX }}"

    - name: Redefine catalog path + SHA
      set_fact:
        OO_INDEX: "{{ provisionhost_registry }}/preflight/disconnected-catalog@{{ catalog_sha.stdout }}"

    - name: Save catalog manifests to temporary scorecard directory
      shell: >
        {{ oc_tool_path }} adm catalog mirror -a {{ partner_creds }}
        {{ OO_INDEX }} {{ provisionhost_registry }} --to-manifests={{ preflight_prerun_tmp_dir.path }}/tmp_oc
      register: catalog_mirror
      failed_when: catalog_mirror.stderr.find('error:') != -1

    - name: Append to imageContentSourcePolicy
      blockinfile:
        block: |
          # Scorecard container
            - mirrors:
              - {{ provisionhost_registry }}/{{ '/'.join(item.split('@')[0].split('/')[1:]) }}
              source: {{ item.split('@')[0] }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.split('@')[0] }}"
        path: "{{ preflight_prerun_tmp_dir.path }}/tmp_oc/imageContentSourcePolicy.yaml"
      loop: "{{ preflight_images }}"

    - name: Apply Image Content Source Policy
      community.kubernetes.k8s:
        definition: "{{ lookup('file', preflight_prerun_tmp_dir.path + '/tmp_oc/imageContentSourcePolicy.yaml') }}"

    - name: Wait for MCP status
      include_role:
        name: check-resource
      vars:
        resource_to_check: "MachineConfigPool"
        check_wait_retries: 30
        check_wait_delay: 10
        check_reason: "ICSP update in preflight role"

- name: Remove tmp dir
  file:
    path: "{{ preflight_prerun_tmp_dir.path }}"
    state: absent

...
