---
- name: Retrieve all images to mirror
  vars:
    scorecard_images: "{{ (lookup('file', 'files/scorecard-images.yml') | from_yaml)['images'] }}"
    preflight_bundle_images: "{{ preflight_operators_to_check | map(attribute='bundle_image') | list }}"
  set_fact:
    preflight_images: "{{ (preflight_assets_images + scorecard_images + preflight_bundle_images) | unique }}"
    # TODO: to delete the old images once preflight release with 1.29.0 integration is cut
    old_images: "{{ (lookup('file', 'files/scorecard-old-images.yml') | from_yaml)['images'] }}"


- name: Mirror preflight images
  vars:
    local_image_location: "{{ dci_local_registry }}/{{ '/'.join(item.split('@')[0].split('/')[1:]) }}"
  shell: >
    skopeo copy
    --all
    --preserve-digests
    --remove-signatures
    --authfile {{ partner_creds }}
    --dest-tls-verify=false
    docker://{{ item }}
    docker://{{ local_image_location }}
  loop: "{{ preflight_images }}"
  register: result
  retries: 3
  delay: 10
  until: result is not failed

- name: "Define catalog tag"
  set_fact:
    index_tag: "{{ ansible_date_time.iso8601_basic }}"

- name: Generate catalog path
  set_fact:
    OO_INDEX: "{{ '/'.join([ dci_local_registry ] + [ 'telcoci','preflight','disconnected-catalog']) }}:{{ index_tag }}"

- name: "Create FBC catalog"
  include_role:
    name: fbc-catalog
    apply:
      environment:
        - DOCKER_CONFIG: "{{ preflight_tmp_dir.path }}"
  vars:
    fbc_index_image:  "{{ OO_INDEX }}"
    fbc_bundles: "{{ preflight_operators_to_check | map(attribute='bundle_image') | list }}"
    fbc_opm_args: "--skip-tls-verify=false"

- name: Push index image into local registry
  shell: >
    podman push
    --authfile {{ partner_creds }}
    {{ OO_INDEX }}

- name: Create temporary directory
  tempfile:
    state: directory
    prefix: preflight_prerun_tmp_dir.
  register: preflight_prerun_tmp_dir

- name: Manage imageContentSourcePolicy update
  block:
    - name: "Get catalog SHA256"
      shell:
        cmd: |
          skopeo inspect --authfile {{ pullsecret_tmp_file }} \
          docker://{{ OO_INDEX }} | jq -r '.Digest'
      register: catalog_sha
      retries: 2
      delay: 10
      until: not catalog_sha.failed

    - name: "Remove local catalog image"
      shell: |
        podman rmi "{{ OO_INDEX }}"

    - name: Redefine catalog path + SHA
      set_fact:
        OO_INDEX: "{{ dci_local_registry }}/telcoci/preflight/disconnected-catalog@{{ catalog_sha.stdout }}"

    - name: Mirror the disconnected-catalog
      shell: >
        {{ oc_tool_path }} adm catalog mirror -a {{ partner_creds }}
        --max-components=3
        {{ OO_INDEX }} {{ dci_local_registry }} --to-manifests={{ preflight_prerun_tmp_dir.path }}/tmp_oc
      register: catalog_mirror
      retries: 2
      delay: 10
      until: catalog_mirror.stderr.find('error:') == -1

    - name: Append pre-flight images to imageContentSourcePolicy
      blockinfile:
        block: |
          # Scorecard container
            - mirrors:
              - {{ dci_local_registry }}/{{ '/'.join(item.split('@')[0].split('/')[1:]) }}
              source: {{ item.split('@')[0] }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.split('@')[0] }}"
        path: "{{ preflight_prerun_tmp_dir.path }}/tmp_oc/imageContentSourcePolicy.yaml"
      # TODO: to delete the old images once preflight release with 1.29.0 integration is cut
      loop: "{{ (preflight_images + old_images) | unique }}"

    - name: Apply Image Content Source Policy
      community.kubernetes.k8s:
        definition: "{{ lookup('file', preflight_prerun_tmp_dir.path + '/tmp_oc/imageContentSourcePolicy.yaml') }}"
      notify:
        - Remove tmp dir

    - name: Wait for MCP status
      include_role:
        name: check-resource
      vars:
        resource_to_check: "MachineConfigPool"
        check_wait_retries: 30
        check_wait_delay: 10
        check_reason: "ICSP update in preflight role"
...
