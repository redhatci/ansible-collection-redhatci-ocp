---
- name: Create temporary (operator) preflight artifacts directory
  tempfile:
    state: directory
    prefix: preflight_operator_artifacts.
  register: preflight_operator_artifacts

# We have to set index image only in the case of connected environment.
# In disconnected environment, index image is generated by opm
# and stored in the private registry on tests stage.
- name: Set operator index image in connected environment
  set_fact:
    OO_INDEX: "{{ operator.index_image }}"
  when: not dci_disconnected | default(false) | bool

- name: Create preflight namespace
  k8s:
    name: "{{ preflight_namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: "Run preflight check operator tests for {{ operator.name }}"
  environment:
    - OPENSHIFT_AUTH: "{{ partner_creds }}"
    - OO_BUNDLE: "{{ operator.bundle_image }}"
    - OO_INDEX: "{{ OO_INDEX }}"
  shell: >
    podman run
    -it
    --rm
    --pull=always
    --privileged
    -e PFLT_JUNIT=true
    -e PFLT_ARTIFACTS=/artifacts
    -e PFLT_LOGFILE=/artifacts/preflight.log
    -e PFLT_LOGLEVEL=trace
    -e DOCKER_CONFIG=/opt
    -e KUBECONFIG=/kubeconfig
    -e PFLT_INDEXIMAGE={{ OO_INDEX }}
    -e PFLT_NAMESPACE={{ preflight_namespace }}
    -e PFLT_SERVICEACCOUNT=default
    -e PFLT_SCORECARD_IMAGE={{ preflight_assets_images[0] }}
    -v {{ preflight_tmp_dir.path }}/kubeconfig:/kubeconfig
    -v {{ preflight_operator_artifacts.path }}:/artifacts
    {{ preflight_podman_auth }}
    {{ preflight_podman_ca }}
    {{ preflight_image }}
    check operator
    {{ operator.bundle_image }}
  register: preflight_exec
  ignore_errors: true

- name: Upload logs for preflight check operator into DCI
  vars:
    preflight_prefix: "preflight_operator_{{ operator.name }}_{{ operator.version }}"
  copy:
    src: "{{ item }}"
    dest: "{{ job_logs.path }}/{{ preflight_prefix }}_{{ item | basename }}"
  with_fileglob:
    - "{{ preflight_operator_artifacts.path }}/*"

- name: Remove tmp dir
  file:
    path: "{{ preflight_operator_artifacts.path }}"
    state: absent

- name: Delete preflight namespace
  k8s:
    name: "{{ preflight_namespace }}"
    api_version: v1
    kind: Namespace
    state: absent
...
