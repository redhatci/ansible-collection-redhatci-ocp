---
- name: Standalone containers tests
  block:
    - name: Create tmp directory for custom configurations and preflight binary
      ansible.builtin.tempfile:
        state: directory
        prefix: preflight_tmp_dir.
      register: preflight_tmp_dir

    - name: Copy registry authentication into config folder for standalone flow
      ansible.builtin.copy:
        src: "{{ partner_creds }}"
        dest: "{{ preflight_tmp_dir.path }}/config.json"
        mode: "0644"
        remote_src: true
      when: partner_creds | length

    # Use custom certificate for self sign registry
    - name: Get custom ca certificate for preflight
      ansible.builtin.include_tasks: prepare_custom_certificate.yml
      when: preflight_custom_ca | length

    # To reuse the functionality for e2e certification when operator is defined
    - name: Run preflight check container in a loop for the standalone container flow
      vars:
        current_operator_image: "{{ c.container_image }}"
        operator:
          name: "{{ current_operator_image.split('/')[-1].split(':')[0].split('@')[0] }}"
          version: "{{ current_operator_image.split(':')[-1] }}"
          pyxis_container_identifier: "{{ c.pyxis_container_identifier | default('') }}"
          create_container_project: "{{ c.create_container_project | default(false) }}"
          short_description: "{{ c.short_description | default('') }}"
          pyxis_product_lists: "{{ c.pyxis_product_lists | default([]) }}"
      ansible.builtin.include_tasks: test_preflight_check_container_one_image.yml
      loop: "{{ preflight_containers_to_certify }}"
      loop_control:
        loop_var: c
      when:
        - not do_container_parallel_test
        - max_images_per_batch <= 1

    - name: "Execute Preflight Checks in Parallel"
      when:
        - do_container_parallel_test
        - max_images_per_batch > 1
      block:
        - name: Create Certification Projects in Loop
          ansible.builtin.include_tasks: create_cert_projects_loop.yml

        - name: Check if New Certification Project IDs are Defined and Not Empty
          ansible.builtin.set_fact:
            preflight_use_new_cert_project_ids: "{{ (ccp_new_cert_project_ids | default([])) | length > 0 }}"

        - name: Assign Certification Projects from existing Pyxis Container Identifiers
          ansible.builtin.set_fact:
            preflight_cert_projects: >-
              {% set projects = [] %}
              {% for container_image in preflight_containers_to_certify %}
                {% if 'pyxis_container_identifier' in container_image %}
                  {% set _ = projects.append(container_image.pyxis_container_identifier) %}
                {% else %}
                  {% set _ = projects.append('') %}
                {% endif %}
              {% endfor %}
              {{ projects }}
          when: not preflight_use_new_cert_project_ids

        - name: Assign Certification Projects from New Certification Project IDs
          ansible.builtin.set_fact:
            preflight_cert_projects: "{{ ccp_new_cert_project_ids }}"
          when: preflight_use_new_cert_project_ids

        - name: "Execute Preflight Checks in Batches of {{ max_images_per_batch }}"
          ansible.builtin.include_tasks: test_preflight_container_parallel.yml
          loop: "{{ preflight_containers_to_certify | batch(max_images_per_batch) | list }}"
          loop_control:
            loop_var: batched_images
            index_var: batch_index
          vars:
            preflight_current_project_batch: "{{ preflight_cert_projects[(batch_index * max_images_per_batch) : (batch_index * max_images_per_batch + batched_images | length)] }}"
  always:
    - name: Teardown
      ansible.builtin.include_tasks: teardown.yml
