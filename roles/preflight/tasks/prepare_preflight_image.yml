---
- name: Retrieve branch name
  ansible.builtin.command:
    cmd: >
      git branch --show-current
    chdir: "{{ preflight_source_dir }}"
  register: preflight_branch_name

- name: Set preflight_branch
  ansible.builtin.set_fact:
    preflight_branch: "{{ preflight_branch_name.stdout }}"

- name: Copy read-only source folder to set 0755 mode
  ansible.builtin.copy:
    src: "{{ preflight_source_dir }}/"
    dest: "{{ preflight_tmp_dir.path }}/preflight-source/"
    mode: "0755"
    remote_src: true

- name: Set preflight_image name
  ansible.builtin.set_fact:
    preflight_image: "{{ dci_local_registry }}/preflight/preflight:{{ preflight_branch }}"

- name: "Append to image name the job id"
  ansible.builtin.set_fact:
    preflight_image: "{{ preflight_image + '-' + job_id }}"
  when: job_id is defined

- name: Get latest tag from Preflight repository
  uri:
    url: "https://api.github.com/repos/redhat-openshift-ecosystem/openshift-preflight/tags"
    method: GET
  register: preflight_github_tags

# We have to tag using the last stable version
# to make Pyxis submission work
- name: Build Preflight image
  ansible.builtin.shell:
    cmd: >
      podman build .
      --no-cache
      -t {{ preflight_image }}
      --build-arg=release_tag={{ preflight_github_tags.json[0].name }} &&
      podman push
      --authfile {{ partner_creds }}
      {{ preflight_image }}
    chdir: "{{ preflight_tmp_dir.path }}/preflight-source"
  notify:
    - "Remove the local preflight image"

- name: Display Preflight version to ensure that the image build went fine
  ansible.builtin.command: >
    podman run --rm {{ preflight_image }} --version
...
