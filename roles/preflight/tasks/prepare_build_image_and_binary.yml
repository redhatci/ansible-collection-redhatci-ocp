---
- name: Retrieve branch name
  shell:
    cmd: >
      git branch --show-current
    chdir: "{{ preflight_source_dir }}"
  register: preflight_branch_name

- name: Set preflight_branch
  set_fact:
    preflight_branch: "{{ preflight_branch_name.stdout }}"

- name: Copy read-only source folder to set 0755 mode
  copy:
    src: "{{ preflight_source_dir }}/"
    dest: "{{ preflight_tmp_dir.path }}/preflight-source/"
    mode: "0755"

- name: Set location of preflight binary preflight_binary_dir and preflight_image
  set_fact:
    preflight_image: "{{ provisionhost_registry }}/preflight/preflight:{{ preflight_branch }}"
    preflight_binary: "{{ preflight_tmp_dir.path }}/preflight-source/preflight"
    preflight_binary_dir: "{{ preflight_tmp_dir.path }}/preflight-source"

- name: Build Preflight image
  shell:
    cmd: >
      podman build .
      -t {{ preflight_image }}
      --build-arg=release_tag={{ preflight_branch }} &&
      podman push
      --authfile {{ partner_creds }}
      {{ preflight_image }}
    chdir: "{{ preflight_tmp_dir.path }}/preflight-source"
  notify:
    - "Remove the local preflight image"

- name: Display Preflight version to ensure that the image build went fine
  shell: >
    podman run --rm {{ preflight_image }} --version

- name: Extract Preflight binary
  shell:
    cmd: >
      podman cp
      $(podman create --rm {{ preflight_image }}):/usr/local/bin/preflight
      {{ preflight_binary }}

- name: Display Preflight version to ensure that the binary extraction went fine
  shell: >
    {{ preflight_binary }} --version

...
