---
- name: Retrieve all images to mirror
  vars:
    busybox_images: "{{ (lookup('file', 'files/scorecard-busybox-ubi.yaml') | from_yaml)['images'] }}"
    preflight_bundle_images: "{{ preflight_operators_to_check | map(attribute='bundle_image') | list }}"
  set_fact:
    preflight_images: "{{ (preflight_assets_images + busybox_images + preflight_bundle_images) | unique }}"

- name: Mirror preflight images
  # Deactivate mirroring of busybox images to workaround docker pull limits.
  # TODO: to delete vars section here and mirror preflight_images.
  vars:
    preflight_bundle_images: "{{ preflight_operators_to_check | map(attribute='bundle_image') | list }}"
    preflight_images_to_mirror: "{{ (preflight_assets_images + preflight_bundle_images) | unique }}"
  shell: >
    skopeo copy
    --all
    --remove-signatures
    --authfile {{ partner_creds }}
    --dest-tls-verify=false
    docker://{{ item }}
    docker://{{ provisionhost_registry }}/{{ '/'.join(item.split('@')[0].split('/')[1:]) }}
  loop: "{{ preflight_images_to_mirror }}"

- name: Create a common catalog image for all bundles to be tested in disconnected environment
  block:
    - name: Generate catalog image name
      set_fact:
        OO_INDEX: "{{ '/'.join([ provisionhost_registry ] + [ 'preflight', 'disconnected-catalog:v0.0.0' ]) }}"

    - name: Create temporary directory
      tempfile:
        state: directory
        prefix: preflight_prerun_tmp_dir.
      register: preflight_prerun_tmp_dir

    - name: Build index image in temporary preflight directory
      vars:
        preflight_bundle_images: "{{ preflight_operators_to_check | map(attribute='bundle_image') | list | unique }}"
      environment:
        - REGISTRY_AUTH_FILE: "{{ partner_creds }}"
      shell:
        cmd: >
          {{ opm_tool_path }} index add --pull-tool podman
          --bundles {{ ','.join(preflight_bundle_images) }}
          --tag {{ OO_INDEX }}
        chdir: "{{ preflight_prerun_tmp_dir.path }}"

    - name: Push index image into local registry
      shell: >
        podman push
        --authfile {{ partner_creds }}
        {{ OO_INDEX }}

- name: Manage imageContentSourcePolicy update
  block:
    - name: Save catalog mirror to temporary scorecard directory
      shell: >
        {{ oc_tool_path }} adm catalog mirror -a {{ partner_creds }}
        {{ OO_INDEX }} {{ provisionhost_registry }} --to-manifests={{ preflight_prerun_tmp_dir.path }}/tmp_oc

    - name: Append to imageContentSourcePolicy
      blockinfile:
        block: |
          # Scorecard container
            - mirrors:
              - {{ provisionhost_registry }}/{{ '/'.join(item.split('@')[0].split('/')[1:]) }}
              source: {{ item.split('@')[0] }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.split('@')[0] }}"
        path: "{{ preflight_prerun_tmp_dir.path }}/tmp_oc/imageContentSourcePolicy.yaml"
      loop: "{{ preflight_images }}"

    - name: Apply Image Content Source Policy
      k8s:
        definition: "{{ lookup('file', preflight_prerun_tmp_dir.path + '/tmp_oc/imageContentSourcePolicy.yaml') }}"

    - name: Wait for MCP status
      include_role: 
        name: wait-mcp
      vars:
        mcp_wait_retries: 60
        mcp_wait_delay: 60

- name: Remove tmp dir
  file:
    path: "{{ preflight_prerun_tmp_dir.path }}"
    state: absent
...
