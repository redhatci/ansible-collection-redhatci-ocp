---
- name: Create temporary (container) preflight artifacts directory
  tempfile:
    state: directory
    prefix: preflight_container_artifacts.
  register: preflight_container_artifacts

- name: check if container has already been certified
  include_tasks: check_if_container_certified.yml
  when: not preflight_test_certified_image

- name: Set pyxis auth and submission for check container
  vars:
    pyxis_apikey: "{{ lookup('file', pyxis_apikey_path) }}"
  set_fact:
    pyxis_auth_container: >-
      --certification-project-id {{ operator.pyxis_container_identifier }}
      --pyxis-api-token {{ pyxis_apikey }}
      --submit
  when:
    - not (already_certified | default(false) | bool)
    - operator.pyxis_container_identifier is defined
    - operator.pyxis_container_identifier | length > 0
  no_log: true

- name: "Run preflight check container on operator image for {{ current_operator_image }} with preflight binary"
  shell: >
    cd {{ preflight_container_artifacts.path }};
    {{ preflight_docker_config_env | default('') }}
    PFLT_JUNIT=true
    PFLT_ARTIFACTS={{ preflight_container_artifacts.path }}
    PFLT_LOGFILE={{ preflight_container_artifacts.path }}/preflight.log
    PFLT_LOGLEVEL=trace
    {{ preflight_binary_dir }}/preflight
    check container
    {{ current_operator_image }}
    {{ preflight_podman_auth_for_binary | default('') }}
    {{ pyxis_auth_container | default('') }}
  register: preflight_container_output
  # do not display logs
  # if preflight invocation contains --submit option
  no_log: "{{ pyxis_auth_container is defined and pyxis_auth_container | length > 0 }}"
  when:
    - not (already_certified | default(false) | bool)

- name: Upload logs for preflight check container into DCI
  vars:
    image_name: "{{ current_operator_image | regex_search('.*/([^@:]+).*$', '\\1') | join('') }}"
    preflight_prefix: "preflight_container_{{ operator.name }}_{{ operator.version }}_{{ image_name }}"
  copy:
    src: "{{ item }}"
    dest: "{{ job_logs.path }}/{{ preflight_prefix }}_{{ item | basename }}"
  with_fileglob:
    - "{{ preflight_container_artifacts.path }}/*"
  when:
    - not (already_certified | default(false) | bool)

- name: Unset pyxis auth to not reuse by following containers
  set_fact:
    pyxis_auth_container: ""

- name: Remove tmp dir
  file:
    path: "{{ preflight_container_artifacts.path }}"
    state: absent

...
