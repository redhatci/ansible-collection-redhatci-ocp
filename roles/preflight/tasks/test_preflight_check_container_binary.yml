---
- name: Check if container has already been certified
  include_tasks: test_check_if_container_certified.yml
  when: not preflight_test_certified_image

- name: "Non-certified image or force test run for {{ current_operator_image }}"
  block:
    - name: "Validate parameters for check container run on {{ current_operator_image }}"
      assert:
        that:
          - preflight_binary | length
          - operator.name is defined
          - operator.version is defined
        fail_msg: "Cannot run preflight check container: automatically generated config is missing"
        success_msg: "All required parameters are ok, proceeding to run preflight check container"

    - name: "Fail if both create_container_project and pyxis_container_identifier are provided for {{ current_operator_image }}"
      fail:
        msg: |
          If you want to reuse the existing cert project, provide its ID pyxis_container_identifier.
          If you want to create a new cert project for container, set create_container_project to true.
          Doing both at once makes your intentions unclear.
      when:
        - operator.create_container_project | default(false) | bool
        - operator.pyxis_container_identifier | default('') | length

    - name: Create temporary (container) preflight artifacts directory
      tempfile:
        state: directory
        prefix: preflight_container_artifacts.
      register: preflight_container_artifacts

    - name: Set cert_project_id if cert project is already here
      set_fact:
        cert_project_id: "{{ operator.pyxis_container_identifier }}"
      when: operator.pyxis_container_identifier | default('') | length

    - name: "Create certification project for {{ current_operator_image }}"
      include_role:
        name: create-certification-project
      vars:
        project_type: "container"
      when:
        - operator.create_container_project | default(false) | bool
        - operator.pyxis_container_identifier | default('') | length == 0

    - name: Template config.yaml with Preflight setup
      template:
        src: templates/config_container.yaml.j2
        dest: "{{ preflight_container_artifacts.path }}/config.yaml"

    - name: "Run preflight check container on operator image {{ current_operator_image }} with preflight binary"
      shell: >
        {{ preflight_binary_dir }}/preflight
        check container
        {{ current_operator_image }}
        {% if cert_project_id | default('') | length %}
        --submit
        {% endif %}
      args:
        chdir: "{{ preflight_container_artifacts.path }}"
      ignore_errors: true

    - name: Unset pyxis auth to not reuse by following containers
      set_fact:
        cert_project_id: ""

    - name: "Run health check on {{ current_operator_image }}"
      include_tasks: test_run_health_check.yml
      when: preflight_run_health_check | bool

    - name: Upload logs for preflight check container into DCI
      vars:
        image_name: "{{ current_operator_image | regex_search('.*/([^@:]+).*$', '\\1') | join('') }}"
        preflight_prefix: "preflight_container_{{ operator.name }}_{{ operator.version }}_{{ image_name }}"
      copy:
        src: "{{ item }}"
        dest: "{{ job_logs.path }}/{{ preflight_prefix }}_{{ item | basename }}"
      with_fileglob:
        - "{{ preflight_container_artifacts.path }}/*"

    - name: Remove tmp dir
      file:
        path: "{{ preflight_container_artifacts.path }}"
        state: absent
  when: not (already_certified | default(false) | bool)

...
