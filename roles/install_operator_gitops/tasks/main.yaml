---

- name: Modify the HiveConfig resource to enable the feature gate for Assisted Installer
  ansible.builtin.shell: |
    {{ iog_oc_tool_path }} patch hiveconfig hive \
       --type merge \
       -p '{"spec":{"targetNamespace":"hive",
            "logLevel":"debug",
            "featureGates":{"custom":{"enabled":["AlphaAgentInstallStrategy"]},
                                 "featureSet":"Custom"}}}'

- name: Modify the Provisioning resource to allow the Bare Metal Operator to watch all namespaces
  ansible.builtin.shell: |
    {{ iog_oc_tool_path }} patch provisioning provisioning-configuration \
       --type merge -p '{"spec":{"watchAllNamespaces": true }}'
  when: metallb

- name: Create Agent Service config
  community.kubernetes.k8s:
    api_version: agent-install.openshift.io/v1beta1
    kind: AgentServiceConfig
    name: agent
    resource_definition:
      spec:
        databaseStorage:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "{{ database_storage_request }}"
        filesystemStorage:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "{{ filesystem_storage_request }}"
        imageStorage:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "{{ image_storage_request }}"
        osImages: "{{ rhcos_images | default(null) }}"

- name: Optionally install the openshift-gitops-operator
  when: not (iog_configure_only | bool)
  block:
    - name: Create namespace for GitOps
      community.kubernetes.k8s:
        api_version: v1
        kind: Namespace
        name: openshift-gitops

    - name: Create operator group for GitOps
      community.kubernetes.k8s:
        api_version: operators.coreos.com/v1
        kind: OperatorGroup
        name: gitops-operator-group
        namespace: openshift-gitops
        resource_definition:
          spec:
            installModeType: AllNamespaces

    - name: Find recommended version of GitOps if not defined
      when: gitops_channel is not defined
      block:
        - name: Find recommended version of GitOps
          community.kubernetes.k8s_info:
            api_version: packages.operators.coreos.com/v1
            kind: PackageManifest
            name: openshift-gitops-operator
            namespace: default
          register: gitops_info

        - name: Set GitOps channel as the default one
          ansible.builtin.set_fact:
            gitops_channel: "{{ gitops_info.resources[0].status.defaultChannel }}"

    - name: Sanity wait of 120 seconds
      ansible.builtin.pause:  # TBD: Replace by proper check
        seconds: 120

    - name: Subscribe to GitOps
      community.kubernetes.k8s:
        api_version: operators.coreos.com/v1alpha1
        kind: Subscription
        name: openshift-gitops-operator
        namespace: openshift-gitops
        resource_definition:
          spec:
            channel: "{{ gitops_channel }}"
            installPlanApproval: Automatic
            name: openshift-gitops-operator
            source: redhat-operators
            sourceNamespace: openshift-marketplace
